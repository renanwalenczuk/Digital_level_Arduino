/**************************************************************************

Adicionar

POWER ON/OFF
AUTO POWER OFF
Nível de bateria
indicação do ZERO
Indicação de HOLD
RANGE 0-90° E 0-180°

 **************************************************************************/

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
// The pins for I2C are defined by the Wire-library. 
// On an arduino UNO:       A4(SDA), A5(SCL)
// On an arduino MEGA 2560: 20(SDA), 21(SCL)
// On an arduino LEONARDO:   2(SDA),  3(SCL), ...
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3D ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define LOGO_HEIGHT   64
#define LOGO_WIDTH    128

// 'logos_senai_preto', 128x64px
const unsigned char logo_senai_preto [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0x80, 0x1f, 0xfe, 0x07, 0xff, 0xfe, 0x7f, 0xc0, 0x3f, 0x00, 0x7f, 0x80, 0x1f, 0x81, 0xff, 
  0xff, 0x80, 0x7f, 0xff, 0x87, 0xff, 0xfe, 0x7f, 0xe0, 0x7e, 0x00, 0xff, 0x80, 0x1f, 0x81, 0xff, 
  0x00, 0x00, 0xff, 0xff, 0x87, 0xff, 0xfc, 0xff, 0xe0, 0x7e, 0x01, 0xff, 0xc0, 0x1f, 0x80, 0x00, 
  0x00, 0x01, 0xff, 0xff, 0xc7, 0xff, 0xfc, 0xff, 0xe0, 0x7e, 0x01, 0xff, 0xc0, 0x3f, 0x80, 0x00, 
  0xff, 0x81, 0xfc, 0x3f, 0xc7, 0xe0, 0x00, 0xff, 0xe0, 0x7e, 0x03, 0xff, 0xc0, 0x3f, 0x81, 0xff, 
  0xff, 0x83, 0xf8, 0x1f, 0xcf, 0xe0, 0x00, 0xff, 0xf0, 0x7e, 0x03, 0xef, 0xc0, 0x3f, 0x01, 0xff, 
  0x00, 0x03, 0xf8, 0x1f, 0x8f, 0xe0, 0x00, 0xfb, 0xf0, 0xfc, 0x07, 0xef, 0xc0, 0x3f, 0x00, 0x00, 
  0x00, 0x03, 0xfc, 0x00, 0x0f, 0xc0, 0x01, 0xfb, 0xf0, 0xfc, 0x0f, 0xc7, 0xc0, 0x7f, 0x00, 0x00, 
  0xff, 0x83, 0xff, 0x80, 0x0f, 0xc0, 0x01, 0xfb, 0xf0, 0xfc, 0x0f, 0xc7, 0xe0, 0x7f, 0x01, 0xff, 
  0xff, 0x83, 0xff, 0xf8, 0x1f, 0xff, 0xf1, 0xf9, 0xf0, 0xfc, 0x1f, 0x87, 0xe0, 0x7f, 0x01, 0xff, 
  0x00, 0x01, 0xff, 0xfc, 0x1f, 0xff, 0xf1, 0xf9, 0xf9, 0xf8, 0x1f, 0x87, 0xe0, 0x7e, 0x00, 0x00, 
  0x00, 0x00, 0xff, 0xfe, 0x1f, 0xff, 0xf3, 0xf1, 0xf9, 0xf8, 0x3f, 0x07, 0xe0, 0x7e, 0x00, 0x00, 
  0xff, 0x80, 0x1f, 0xff, 0x1f, 0xff, 0xf3, 0xf1, 0xf9, 0xf8, 0x7f, 0x07, 0xe0, 0xfe, 0x01, 0xff, 
  0xff, 0x80, 0x03, 0xff, 0x1f, 0x80, 0x03, 0xf0, 0xf9, 0xf8, 0x7f, 0xff, 0xf0, 0xfe, 0x01, 0xff, 
  0x00, 0x00, 0x00, 0x7f, 0x3f, 0x80, 0x03, 0xf0, 0xfd, 0xf8, 0xff, 0xff, 0xf0, 0xfe, 0x00, 0x00, 
  0x00, 0x0f, 0xe0, 0x7f, 0x3f, 0x80, 0x03, 0xf0, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xfc, 0x00, 0x00, 
  0xff, 0x8f, 0xe0, 0x7f, 0x3f, 0x00, 0x07, 0xe0, 0xff, 0xf1, 0xff, 0xff, 0xf1, 0xfc, 0x01, 0xff, 
  0xff, 0x8f, 0xe0, 0xfe, 0x3f, 0x00, 0x07, 0xe0, 0x7f, 0xf3, 0xff, 0xff, 0xf1, 0xfc, 0x01, 0xff, 
  0x00, 0x0f, 0xfb, 0xfe, 0x3f, 0xff, 0xe7, 0xe0, 0x7f, 0xf3, 0xf0, 0x07, 0xf9, 0xfc, 0x00, 0x00, 
  0x00, 0x07, 0xff, 0xfc, 0x7f, 0xff, 0xe7, 0xe0, 0x7f, 0xe7, 0xf0, 0x03, 0xf9, 0xf8, 0x00, 0x00, 
  0xff, 0x87, 0xff, 0xf8, 0x7f, 0xff, 0xe7, 0xe0, 0x7f, 0xe7, 0xe0, 0x03, 0xf9, 0xf8, 0x01, 0xff, 
  0xff, 0x83, 0xff, 0xe0, 0x7f, 0xff, 0xef, 0xc0, 0x3f, 0xef, 0xc0, 0x03, 0xfb, 0xf8, 0x01, 0xff, 
  0x00, 0x00, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

int bt_zero = 2;
int bt_hold = 3;

bool zeroRelativo = false;
bool hold = false;

void setup() {
  Serial.begin(9600);

  pinMode(bt_zero, INPUT);
  pinMode(bt_hold, INPUT);
  pinMode(LED_BUILTIN, OUTPUT);

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }

  // Show initial display buffer contents on the screen --
  // the library initializes this with an Adafruit splash screen.
  //display.display();
  //delay(1000); // Pause for 2 seconds

  // Clear the buffer
  //display.clearDisplay();

  // Draw a single pixel in white
  //display.drawPixel(10, 10, SSD1306_WHITE);

  //display.display();
  //delay(500);

  testdrawbitmap();
  delay(1000);
  //testdrawstyles();
  display.clearDisplay();
}

void loop() {

  if(digitalRead(bt_zero) == 0){
    if(zeroRelativo) zeroRelativo = false;
    else zeroRelativo = true;

    if(zeroRelativo){
      ligaFuncaoZero();
    }
    else desligaFuncaoZero();
    delay(200);
  }
  if(digitalRead(bt_hold) == 0) desligaFuncaoZero();
  mostraAngulo();
  delay(100);
}

void ligaFuncaoZero(){
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0,0);
  //display.print("Z");
  display.write('Z');
  display.display();
}

void desligaFuncaoZero(){
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0,0);
  //display.print("-");
  display.write(' ');
  display.display();
}

void mostraAngulo(){
  float angulo = 90.0;
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(20,10);
  display.print(angulo);
  //display.print("º"); //Verificar os símbolos
  display.display();
}

void testdrawstyles(void) {
  display.clearDisplay();

  display.setTextSize(1);             // Normal 1:1 pixel scale
  display.setTextColor(SSD1306_WHITE);        // Draw white text
  display.setCursor(0,0);             // Start at top-left corner
  display.println(F("Hello, world!"));

  display.setTextColor(SSD1306_BLACK, SSD1306_WHITE); // Draw 'inverse' text
  display.println(3.141592);

  display.setTextSize(2);             // Draw 2X-scale text
  display.setTextColor(SSD1306_WHITE);
  display.print(F("0x")); display.println(0xDEADBEEF, HEX);

  display.display();
  delay(2000);
}

void testscrolltext(void) {
  display.clearDisplay();

  display.setTextSize(2); // Draw 2X-scale text
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(10, 0);
  display.println(F("scroll"));
  display.display();      // Show initial text
  delay(100);

  // Scroll in various directions, pausing in-between:
  display.startscrollright(0x00, 0x0F);
  delay(2000);
  display.stopscroll();
  delay(1000);
  display.startscrollleft(0x00, 0x0F);
  delay(2000);
  display.stopscroll();
  delay(1000);
  display.startscrolldiagright(0x00, 0x07);
  delay(2000);
  display.startscrolldiagleft(0x00, 0x07);
  delay(2000);
  display.stopscroll();
  delay(1000);
}

void testdrawbitmap(void) {
  display.clearDisplay();

  display.drawBitmap(
    (display.width()  - LOGO_WIDTH ) / 2,
    (display.height() - LOGO_HEIGHT) / 2,
    logo_senai_preto, LOGO_WIDTH, LOGO_HEIGHT, 1);
  display.display();
  delay(1000);
}
